name: release
on:
  release:
    types: [published]
permissions:
  contents: write
jobs:
  build:
    name: Build - ${{ matrix.platform.os-name }}
    strategy:
      matrix:
        platform:
          - os-name: linux-x86_64
            runs-on: ubuntu-24.04
            target: x86_64-unknown-linux-gnu
            original-output-file: libaudio_navigation_tts.so
            output-file: libaudio_navigation_tts_x86_64.so
          - os-name: linux-aarch64
            runs-on: ubuntu-24.04-arm
            target: aarch64-unknown-linux-gnu
            original-output-file: libaudio_navigation_tts.so
            output-file: libaudio_navigation_tts_aarch64.so
          - os-name: windows-x86_64
            runs-on: windows-2025
            target: x86_64-pc-windows-msvc
            original-output-file: audio_navigation_tts.dll
            output-file: audio_navigation_tts_x86_64.dll
          - os-name: windows-aarch64
            runs-on: windows-2025
            target: aarch64-pc-windows-msvc
            original-output-file: audio_navigation_tts.dll
            output-file: audio_navigation_tts_aarch64.dll
          - os-name: macos-x86_64
            runs-on: macOS-13
            target: x86_64-apple-darwin
            original-output-file: libaudio_navigation_tts.dylib
            output-file: libaudio_navigation_tts_x86_64.dylib
          - os-name: macos-aarch64
            runs-on: macOS-15
            target: aarch64-apple-darwin
            original-output-file: libaudio_navigation_tts.dylib
            output-file: libaudio_navigation_tts_aarch64.dylib
    runs-on: ${{ matrix.platform.runs-on }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Install Rust toolchain
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          cache: false
          target: ${{ matrix.platform.target }}
      - name: Build library
        run: "cargo build --release --target ${{ matrix.platform.target }}"
      - name: Rename library
        run: "cp target/${{ matrix.platform.target }}/release/${{ matrix.platform.original-output-file }} target/${{ matrix.platform.target }}/release/${{ matrix.platform.output-file }}"
        shell: bash
      - name: Upload library for release
        run: "gh release upload ${{ github.event.release.tag_name }} target/${{ matrix.platform.target }}/release/${{ matrix.platform.output-file }}"
        env:
          GITHUB_TOKEN: ${{ github.TOKEN }}
        shell: bash
  data:
    name: Upload espeak-ng-data
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Upload espeak-ng-data for release
        run: "gh release upload ${{ github.event.release.tag_name }} espeak-ng-data.zip"
        env:
          GITHUB_TOKEN: ${{ github.TOKEN }}
